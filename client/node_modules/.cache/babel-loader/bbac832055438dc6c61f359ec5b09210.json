{"ast":null,"code":"var _jsxFileName = \"/Users/harrynguyen/Desktop/remind-me/src/components/AddReminder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddReminder({\n  parentCallback\n}) {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n\n  const handleSubmit = e => {\n    const newReminder = {\n      id: Math.floor(Math.random() * 1000000),\n      text,\n      date: new Date().getTime()\n    };\n    parentCallback(newReminder);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Reminder...\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        showTimeSelect: true,\n        selected: date,\n        onChange: time => setDate(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Remind Me!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddReminder, \"z12CTxYeUcTeffI/NJB852YKlpk=\");\n\n_c = AddReminder;\nexport default AddReminder;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReminder\");","map":{"version":3,"sources":["/Users/harrynguyen/Desktop/remind-me/src/components/AddReminder.js"],"names":["React","useState","DatePicker","AddReminder","parentCallback","text","setText","date","setDate","Date","handleSubmit","e","newReminder","id","Math","floor","random","getTime","preventDefault","target","value","time"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAyC;AAAA;;AACrC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAIQ,IAAJ,EAAD,CAAhC;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxB,UAAMC,WAAW,GAAG;AAChBC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B,CADY;AAEhBX,MAAAA,IAFgB;AAGhBE,MAAAA,IAAI,EAAE,IAAIE,IAAJ,GAAWQ,OAAX;AAHU,KAApB;AAKAb,IAAAA,cAAc,CAACQ,WAAD,CAAd;AAEAD,IAAAA,CAAC,CAACO,cAAF;AACH,GATD;;AAWA,sBACI;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAER,YAAhB;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,mBAFhB;AAGI,QAAA,KAAK,EAAEL,IAHX;AAII,QAAA,QAAQ,EAAIM,CAAD,IAAOL,OAAO,CAACK,CAAC,CAACQ,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,UAAD;AACI,QAAA,cAAc,MADlB;AAEI,QAAA,QAAQ,EAAEb,IAFd;AAGI,QAAA,QAAQ,EAAEc,IAAI,IAAIb,OAAO,CAACa,IAAD;AAH7B;AAAA;AAAA;AAAA;AAAA,cAPJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAlCQlB,W;;KAAAA,W;AAoCT,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react' \nimport DatePicker from \"react-datepicker\"\n\nfunction AddReminder({ parentCallback }) {\n    const [text, setText] = useState(\"\")\n    const [date, setDate] = useState(new Date())\n    \n    const handleSubmit = (e) => {\n        const newReminder = {\n            id: Math.floor(Math.random() * 1000000),\n            text,\n            date: new Date().getTime()\n        }\n        parentCallback(newReminder)\n\n        e.preventDefault()\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input \n                    type=\"text\"\n                    placeholder=\"Enter Reminder...\"\n                    value={text}\n                    onChange={ (e) => setText(e.target.value) }\n                />\n                <DatePicker\n                    showTimeSelect\n                    selected={date}\n                    onChange={time => setDate(time)}\n                / >\n\n                <button>Remind Me!</button>\n            </form>\n        </div>\n    )\n}\n\nexport default AddReminder"]},"metadata":{},"sourceType":"module"}