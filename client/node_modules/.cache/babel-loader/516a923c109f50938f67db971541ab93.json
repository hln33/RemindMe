{"ast":null,"code":"var _jsxFileName = \"/Users/harrynguyen/Desktop/remind-me/src/components/Reminder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Reminder({\n  reminder\n}) {\n  _s();\n\n  const [timeRemaining, setTimeRemaining] = useState({});\n  var days, hrs, mins, secs;\n\n  const findTimeLeft = () => {\n    const remindDate = reminder.date;\n    const present = new Date();\n    const secDiff = (remindDate.getTime() - present.getTime()) / 1000;\n    let timeLeft = {};\n\n    if (secDiff > 0) {\n      timeLeft = {\n        days: Math.floor(secDiff / (60 * 60 * 24)),\n        hours: Math.floor(secDiff / (60 * 60) % 24),\n        minutes: Math.floor(secDiff / 60 % 60),\n        seconds: Math.floor(secDiff % 60)\n      };\n      setTimeRemaining(timeLeft);\n    }\n  };\n\n  useEffect(() => {\n    setInterval(() => findTimeLeft(), 1000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reminder\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: reminder.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time until Reminded: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        children: [timeRemaining.days ? ` ${timeRemaining.days} D ` : null, timeRemaining.hours ? `${timeRemaining.hours} H ` : null, timeRemaining.minutes ? `${timeRemaining.minutes} M ` : null, timeRemaining.seconds ? `${timeRemaining.seconds} S ` : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Reminder, \"CyMiQqaSRN+sTnQkJYY/jPbAM/A=\");\n\n_c = Reminder;\nexport default Reminder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reminder\");","map":{"version":3,"sources":["/Users/harrynguyen/Desktop/remind-me/src/components/Reminder.js"],"names":["React","useEffect","useState","Reminder","reminder","timeRemaining","setTimeRemaining","days","hrs","mins","secs","findTimeLeft","remindDate","date","present","Date","secDiff","getTime","timeLeft","Math","floor","hours","minutes","seconds","setInterval","text","fontWeight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA8B;AAAA;;AAC1B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCJ,QAAQ,CAAC,EAAD,CAAlD;AACA,MAAIK,IAAJ,EAAUC,GAAV,EAAeC,IAAf,EAAqBC,IAArB;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACvB,UAAMC,UAAU,GAAGR,QAAQ,CAACS,IAA5B;AACA,UAAMC,OAAO,GAAG,IAAIC,IAAJ,EAAhB;AACA,UAAMC,OAAO,GAAG,CAACJ,UAAU,CAACK,OAAX,KAAuBH,OAAO,CAACG,OAAR,EAAxB,IAA6C,IAA7D;AACA,QAAIC,QAAQ,GAAG,EAAf;;AAEA,QAAIF,OAAO,GAAG,CAAd,EAAiB;AACbE,MAAAA,QAAQ,GAAG;AACPX,QAAAA,IAAI,EAAEY,IAAI,CAACC,KAAL,CAAWJ,OAAO,IAAI,KAAK,EAAL,GAAU,EAAd,CAAlB,CADC;AAEPK,QAAAA,KAAK,EAAEF,IAAI,CAACC,KAAL,CAAYJ,OAAO,IAAI,KAAK,EAAT,CAAR,GAAwB,EAAnC,CAFA;AAGPM,QAAAA,OAAO,EAAEH,IAAI,CAACC,KAAL,CAAYJ,OAAO,GAAG,EAAX,GAAiB,EAA5B,CAHF;AAIPO,QAAAA,OAAO,EAAEJ,IAAI,CAACC,KAAL,CAAWJ,OAAO,GAAG,EAArB;AAJF,OAAX;AAMAV,MAAAA,gBAAgB,CAACY,QAAD,CAAhB;AACH;AACJ,GAfD;;AAiBAjB,EAAAA,SAAS,CAAC,MAAM;AACZuB,IAAAA,WAAW,CAAC,MAAMb,YAAY,EAAnB,EAAuB,IAAvB,CAAX;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAA,gBAAKP,QAAQ,CAACqB;AAAd;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,uDAAwB;AAAA;AAAA;AAAA;AAAA,cAAxB,eACI;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA,mBACKrB,aAAa,CAACE,IAAd,GAAsB,IAAGF,aAAa,CAACE,IAAK,KAA5C,GAAmD,IADxD,EAEKF,aAAa,CAACgB,KAAd,GAAuB,GAAEhB,aAAa,CAACgB,KAAM,KAA7C,GAAoD,IAFzD,EAGKhB,aAAa,CAACiB,OAAd,GAAyB,GAAEjB,aAAa,CAACiB,OAAQ,KAAjD,GAAwD,IAH7D,EAIKjB,aAAa,CAACkB,OAAd,GAAwB,GAAElB,aAAa,CAACkB,OAAQ,KAAhD,GAAuD,IAJ5D;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAtCQpB,Q;;KAAAA,Q;AAwCT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react' \n\nfunction Reminder({reminder}) {\n    const [timeRemaining, setTimeRemaining] = useState({})\n    var days, hrs, mins, secs\n\n    const findTimeLeft = () => {\n        const remindDate = reminder.date\n        const present = new Date()\n        const secDiff = (remindDate.getTime() - present.getTime()) / 1000\n        let timeLeft = {}\n\n        if (secDiff > 0) {\n            timeLeft = {\n                days: Math.floor(secDiff / (60 * 60 * 24)),\n                hours: Math.floor((secDiff / (60 * 60)) % 24),\n                minutes: Math.floor((secDiff / 60) % 60),\n                seconds: Math.floor(secDiff % 60)\n            }\n            setTimeRemaining(timeLeft)\n        }\n    }\n\n    useEffect(() => {\n        setInterval(() => findTimeLeft(), 1000)\n    }, [])\n\n    return (\n        <div className=\"reminder\">\n            <h2>{reminder.text}</h2>\n            <p>Time until Reminded: <br/>\n                <span style={{fontWeight: \"bold\"}}>\n                    {timeRemaining.days ? ` ${timeRemaining.days} D ` : null} \n                    {timeRemaining.hours ? `${timeRemaining.hours} H ` : null}\n                    {timeRemaining.minutes ? `${timeRemaining.minutes} M ` : null} \n                    {timeRemaining.seconds? `${timeRemaining.seconds} S ` : null}\n                </span>\n            </p>\n        </div>\n    )\n}\n\nexport default Reminder"]},"metadata":{},"sourceType":"module"}