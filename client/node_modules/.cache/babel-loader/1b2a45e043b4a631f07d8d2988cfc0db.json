{"ast":null,"code":"var _jsxFileName = \"/Users/harrynguyen/Desktop/remind-me/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { ReminderList, AddReminder } from './index';\nimport { getReminders, postReminder, deleteReminder } from './httpCalls';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [reminders, setReminders] = useState([]);\n  useEffect(() => {\n    getReminders();\n  }, []);\n\n  const handleAddition = newReminder => {\n    postReminder(newReminder.id);\n    setReminders([newReminder, ...reminders]);\n  };\n\n  const handleRemoval = id => {\n    //deleteReminder(id)\n    setReminders(reminders.filter(r => r.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"REMIND ME!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReminderList, {\n        reminderList: reminders,\n        parentCallback: handleRemoval\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddReminder, {\n        parentCallback: handleAddition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ywom95O85bhmIGDtbxAAvIW1S3U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/harrynguyen/Desktop/remind-me/client/src/App.js"],"names":["useEffect","useState","ReminderList","AddReminder","getReminders","postReminder","deleteReminder","App","reminders","setReminders","handleAddition","newReminder","id","handleRemoval","filter","r"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,YAAR,EAAsBC,WAAtB,QAAwC,SAAxC;AACA,SAAQC,YAAR,EAAsBC,YAAtB,EAAoCC,cAApC,QAAyD,aAAzD;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMM,cAAc,GAAGC,WAAW,IAAI;AACpCN,IAAAA,YAAY,CAACM,WAAW,CAACC,EAAb,CAAZ;AACAH,IAAAA,YAAY,CAAC,CAACE,WAAD,EAAc,GAAGH,SAAjB,CAAD,CAAZ;AACD,GAHD;;AAKA,QAAMK,aAAa,GAAGD,EAAE,IAAI;AAC1B;AACAH,IAAAA,YAAY,CAACD,SAAS,CAACM,MAAV,CAAiBC,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASA,EAA/B,CAAD,CAAZ;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAc,QAAA,YAAY,EAAEJ,SAA5B;AAAuC,QAAA,cAAc,EAAEK;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,WAAD;AAAa,QAAA,cAAc,EAAEH;AAA7B;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAzBQH,G;;KAAAA,G;AA2BT,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport {ReminderList, AddReminder} from './index';\nimport {getReminders, postReminder, deleteReminder} from './httpCalls'\nimport './App.css';\n\nfunction App() {\n  const [reminders, setReminders] = useState([])\n  useEffect(() => {\n    getReminders()\n  }, [])\n\n  const handleAddition = newReminder => {\n    postReminder(newReminder.id)\n    setReminders([newReminder, ...reminders])\n  }\n\n  const handleRemoval = id => {\n    //deleteReminder(id)\n    setReminders(reminders.filter(r => r.id !== id))\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>REMIND ME!</h1>\n        <ReminderList reminderList={reminders} parentCallback={handleRemoval}/>\n        <AddReminder parentCallback={handleAddition}/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}